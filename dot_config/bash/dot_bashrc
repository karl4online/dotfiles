#!/bin/env bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Enable bash programmable completion features in interactive shells
if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi

#######################################################
# EXPORTS
#######################################################

# Disable the bell
if [[ $iatest -gt 0 ]]; then bind "set bell-style visible"; fi

### EXPORT
export TERM="xterm-256color" 

# Expand the history size
export HISTFILESIZE=10000
export HISTSIZE=5000
export HISTTIMEFORMAT="%d/%m/%y %T " # add timestamp to history

# Don't put duplicate lines in the history and do not add lines that start with a space
export HISTCONTROL=erasedups:ignoredups:ignorespace
export HISTIGNORE="a:l:c:ls:ll"

shopt -s checkwinsize # checks term size when bash regains control
shopt -s cmdhist # save multi-line commands in history as single line
shopt -s histappend # do not overwrite history
PROMPT_COMMAND='history -a'

#ignore upper and lowercase when TAB completion
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous On"

# set up XDG folders
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

# Ignore case on auto-completion
# Note: bind used instead of sticking these in .inputrc
#if [[ $iatest -gt 0 ]]; then bind "set completion-ignore-case on"; fi
# Show auto-completion list automatically, without double tab
#if [[ $iatest -gt 0 ]]; then bind "set show-all-if-ambiguous On"; fi

# To have colors for ls and all grep commands such as grep, egrep and zgrep
export CLICOLOR=1
export LS_COLORS='no=00:fi=00:di=00;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:*.xml=00;31:'

# Color for manpages in less makes manpages a little easier to read
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Define Editor
export EDITOR=nvim

# Alias's to modified commands
alias v='$EDITOR'

alias c='clear'
alias cls='clear'

alias grep='grep --color=auto'

alias ff='fastfetch'

# Changing "ls" to "eza"
alias a='eza -a --icons --group-directories-first'
alias aa='eza -al --icons --group-directories-first'  # long format
alias l='eza -a --icons --group-directories-first'
alias ls='eza -l --icons --group-directories-first' # my preferred listing
alias ll='eza -al --icons --group-directories-first'  # long format
alias l.='eza -al --icons --group-directories-first ../' # ls on the PARENT directory

alias pow='systemctl poweroff'
alias reb='systemctl reboot'

alias y='yazi'
alias r='ranger'

alias cp='cp -i'
alias mv='mv -i'
alias rm='trash -v'
alias mkdir='mkdir -v'

# Search command line history
alias h="history | grep "

# Change directory aliases
alias ..='z ..'
alias ...='z ../..'
alias ....='z ../../..'
alias .....='z ../../../..'


cd ()
{
	if [ -n "$1" ]; then
		builtin cd "$@" && ls -l
	else
		builtin cd ~ && ls -l
	fi
}

# Check if the shell is interactive
# if [[ $- == *i* ]]; then
#     # Bind Ctrl+f to insert 'zi' followed by a newline
#     bind '"\C-f":"zi\n"'
# fi

export PATH=$PATH:"$HOME/.local/bin:/var/lib/flatpak/exports/bin:/.local/share/flatpak/exports/bin"

eval "$(starship init bash)"
eval "$(zoxide init bash)"
